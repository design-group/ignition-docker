name: Build Multiple Ignition Docker Images

on:
  workflow_dispatch:
    inputs:
      base-version:
        description: 'Base version for range build (e.g., 8.1)'
        required: true
        default: '8.1'
      start-version:
        description: 'Start version for range build (e.g., 22 for 8.1.22)'
        required: true
        type: number
        default: 0
      end-version:
        description: 'End version for range build (e.g., 42 for 8.1.42)'
        required: true
        type: number
        default: 42
      push:
        description: 'Push to Container Registry'
        required: true
        type: boolean
        default: true

env:
  ignore-versions: '6,29,34,40'

jobs:
  prepare:
    name: Define Version List
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.set-versions.outputs.versions }}
    steps:
      - id: set-versions
        run: |
          # Convert comma-separated ignore versions to array
          IFS=',' read -ra ignore_versions <<< "${{ env.ignore-versions }}"
          
          # Generate jq filter string dynamically
          jq_filter="map(select(. != \"\" and (. | tonumber) as \$n | $(printf '($n != %s) and ' "${ignore_versions[@]}" | sed 's/ and $//'))"
          
          # Generate sequence and filter out ignored versions
          versions=$(seq ${{ inputs.start-version }} ${{ inputs.end-version }} | \
                     jq -R -s -c "split(\"\n\")[:-1] | $jq_filter)")
          
          echo "versions=$versions" >> $GITHUB_OUTPUT

  build:
    name: Build and Push
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 2  # Limit concurrent jobs
      matrix:
        version: ${{ fromJson(needs.prepare.outputs.versions) }}

    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Buildx Setup
      uses: docker/setup-buildx-action@v3.6.1
    
    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push with retry
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_on: error
        command: |
          docker buildx bake \
            --file ./docker-bake.hcl \
            --set '*.args.IGNITION_VERSION=${{ inputs.base-version }}.${{ matrix.version }}' \
            --set '*.tags=ghcr.io/${{ github.repository }}:${{ inputs.base-version }}.${{ matrix.version }}' \
            --set '*.cache-from=type=gha' \
            --set '*.cache-to=type=gha,mode=max' \
            ${{ inputs.push && '--push' || '' }} \
            default

    - name: Delay between builds
      run: sleep 30

  summary:
    name: Build Summary
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Check build results
      run: |
        if [[ "${{ needs.build.result }}" == "success" ]]; then
          echo "All builds completed successfully!"
        else
          echo "Some builds failed. Please check the individual job logs for details."
          exit 1
        fi